データジャーナリズムにおけるオープンソースコーディングの実践
Written by Ryan Pitts and Lindsay Muscato
概要
この章では、ジャーナリズムのためのオープンソースコーディングの課題と、成功したプロジェクトに共通する特徴を説明します。
キーワード：オープンソース、プログラミング、コーディング、ジャーナリズム、ツール開発、コードライブラリ
ご想像ください。
数人のジャーナリストが協力して政府のＷｅｂサイトから記録をかき集め、データに変換し、そのデータを分析してパターンを探し、読者にストーリーを伝えるために可視化したものを発表します。
このようなプロセスは、毎日、世界中のニュースルームで展開されています。
多くのニュースルームでは、各ステップが少なくとも部分的にはオープンソースソフトウェアに依存しており、コミュニティでテストされたツールをつなぎ合わせて、以前のどの方法よりも高速なワークフローを実現しています。
しかし、今日のデータジャーナリズムのワークフローの一部となっているのは、オープンソースソフトウェアだけではなく、オープンソースの哲学でもあるのです。私たちは、イベントやコミュニティ・チャンネル、ソーシャルメディアを通じて、互いに知識やスキルを共有しています。
私たちは、方法論とデータを公開し、同僚に私たちの仮説を正してもらい、読者に私たちの結果を信頼する根拠を与えます。
このようなオープンで協力的なアプローチは、私たちのジャーナリズムをより良いものにします。フィードバックや外部からの貢献を求めるたびに、私たちの仕事はより弾力的なものになるのです。
記事でデータを使用する際の問題点を他の誰かが発見するかもしれませんし、私たちのソフトウェアをより良くする新機能を提供してくれるかもしれません。
このようなプラクティスは、自分たちのプロジェクトや組織の枠を超えて、より大きな利益をもたらす可能性もあります。
私たちはふつう、独力で開発したツールや技術だけを用いて、大きなプロジェクトに飛び込むことはしません。
その代わりに、メンターから学び、カンファレンスで話を聞き、気に入ったプロジェクトがどのように作られたかを学びながら、他の人たちの仕事の上に構築していくのです。
OpenNews では、オープンソースプロジェクトでジャーナリストと協力し、開発者のコラボレーションをサポートし、「The Field Guide to Open Source in the Newsroom」を執筆してきました。
この章では、データジャーナリズムにおけるオープンソースの役割について、共通の課題や成功したプロジェクトの特徴など、私たちが学んだことを振り返っていきます。
共通の課題
オープンな仕事はやりがいがあって楽しく、その過程で多くのことを学ぶことができますが、いつも簡単というわけではありません。
成功には、オープンソースプロジェクトがしばしば直面する課題に目を向けることが必要です。
ケースを作る。編集者や法務チームなどに、自分の作品を「無料で提供する」ことが良いアイデアだと説得するのは難しいと感じることがあります。
法律、ビジネス、風評、持続可能性などの懸念があるかもしれません。そこで私たちは、ジャーナリストの方々と協力して、オープンソースのツールやプロセスがもたらすメリット（より強固なコード、コミュニティの好意、信頼性の向上など）を文書化しています。
人は移り変わるものであり、テクノロジーも同じです。チームの主要メンバーが別の仕事に就くと、オープンソース・プロジェクトの維持管理に使える時間が、彼らとともに消えてしまうことがよくあります。
例えば、数年前、ニューヨークタイムズ紙は、巨大なデータセットをブラウザ内で高速にフィルタリングするJavaScriptフレームワーク、Pouroverをリリースしました。
Pouroverは広く共有され、コミュニティが形成され始めました。しかし、主要な開発者の一人が転職し、チームは同様の問題を解決する新しいツールを探し始めることになったのです。
決してPouroverのコードや計画を非難しているわけではなく、プロジェクトの寿命が想像と違うだけということもあるということです。
成功へのプレッシャー。直感に反するようですが、自分が作ったものに人々が熱狂していることを知ると、作り込まれていない作品が生まれることがあります。
突然の爆発的な人気は、作り続け、バグを修正し、コミュニティの貢献に応えなければならないというプレッシャーとなります。
エリオット・ベントレーは、本業の問題を解決するために書いたウェブアプリ、oTranscribeをリリースした後、これらすべてのことと格闘していました。
これは、彼が本業であるインタビューの音声を書き起こしのために書いたＷｅｂアプリです。
数ヶ月後、彼は何万人ものアクティブユーザーを抱え、プロジェクトの将来について質問攻めに遭いました。

Features of Successful Projects
There are many great examples of open source in journalism—from projects released by one newsroom and adopted by many others, to those that are collaborations from the start. The most successful efforts we have seen share one or more qualities, which we describe below.

They solve a problem that you run into every day. Odds are, someone else is running into the same roadblock or the same set of repetitive tasks as you are. In covering criminal justice nationwide, the Marshall Project watches hundreds of websites for changes and announcements. Visiting a list of URLs over and over again is not a good use of a reporter’s time, but it is a great use of a cloud server. Klaxon keeps an eye on those websites and sends an alert whenever one changes—it’s so fast that the newsroom often has information even before it is officially announced. That kind of tracking is useful for all kinds of beats, and when the Marshall Project solved a problem for their reporters, they solved it for other organizations, too. By releasing Klaxon as an open-source project, its developers help reporting in dozens of newsrooms and receive code contributions in return that make their tool even better.

They solve a problem that is not fun to work on. NPR’s data/visuals team needed a way to make graphics change dimensions along with the responsive pages they were embedded on. It is a critical feature as readers increasingly use mobile devices to access news content, but not necessarily a fun problem to work on. When NPR released Pym.js, an open-source code library that solved the problem, it did not take long to find widespread adoption across the journalism community.

They have great documentation. There is a huge difference between dumping code onto the Internet and actually explaining what a project is for and how to use it. Deadlines have a tendency to make writing documentation a low priority, but a project can’t thrive without it. New users need a place to get started, and you, too, will thank yourself when you revisit your own work later on. Wherewolf is a small JavaScript service you can use to figure out where an address is located inside a set of boundaries (e.g., school districts or county borders). Although the code has not needed an update for a while, the user community is still growing, at least in part because its documentation is thorough and full of examples.

They welcome contributors. The California Civic Data Coalition has a suite of open-source tools that help reporters use state campaign-finance data. The project began as a collaboration between a few developers in two newsrooms, but it has grown thanks to contributions from students, interns, civic data folks, interested citizens and even journalists with no coding experience at all. This didn’t happen by accident: The initiative has a roadmap of features to build and bugs to fix, they create tickets with tasks for different levels of expertise, and they show up at conferences and plan sprints that welcome everyone.

There are many ways to measure success for an open-source newsroom project. Are you looking to build a community and invite contributions? Do you need a way to get extra eyes on your work? Or did you make something that solves a problem for you, and it just feels good to save other people the same heartache? You get to decide what success looks like for you. No matter what you choose, developing a plan that gets you there will have a few things in common: Being clear about your goal so you can create an honest roadmap for yourself and set the right expectations for others; writing friendly, example-driven documentation that brings new people onboard and explains decision making down the road; adopting a collaborative way of working that welcomes people in. You’ll learn so much by doing, so get out there and share!

Footnotes

1. See also the chapters by Leon and Mazotte for different perspectives on the role of open-source practices and philosophies in data journalism.
