ニュースルームにおけるデータを活用したコーディング
Written by Basile Simon

概要

ニュースルームは、コーダーや技術志向のジャーナリストにとって固有の課題を抱えています。

キーワード：計算論的ジャーナリズム、プログラミング、データクリーニング、データベース、データ・ビジュアライゼーション

必然的に、データとコードが仲間になるポイントがあります。データセットが大きすぎてGoogle Sheets（の処理）が遅くなったとき、Excelの数式が難解になったとき、何百行ものデータを理解するのが不可能になったときなどです。
コーディングは、データをよりシンプルに、よりエレガントに、繰り返しを少なく、より繰り返し可能にしてくれます。スプレッドシートを放棄することを意味するのではなく、スプレッドシートが数多くのツールの一つになることを意味しています。
データ・ジャーナリストは、必要に応じて様々なテクニックを駆使しています。例えば、Python notebooksでデータをスクレイピングしたり、その結果をスプレッドシートに投げ込んだり、Refineでクリーニングするために、コピーアンドペーストしたりします。
人によって学ぶプログラミング言語や技術は異なり、ニュースルームによっても制作する言語は異なります。
これは、組織が社内で使用する一連のテクノロジー「スタック」を選択することにも起因しています。
例えば、ロンドンのタイムズ紙では、データ、ビジュアル、開発のほとんどがR、JavaScript、Reactで行われていますし、アメリカのプロパブリカでは、ウェブアプリの多くにRubyが使われています。
ツールを選択するのは個人であることが多いですが、報道機関の慣習や文化がこれらの選択に大きく影響することもあります。
たとえば、BBCはデータ可視化のワークフローを徐々にRに移行しており（BBC Data Journalism team, n.d.）、エコノミスト誌は世界的に有名なビッグマック指数をExcelベースの計算からRとReact/d3.jsのダッシュボードに移行しました（González et al.2018）。
多くの選択肢があり、唯一の正解はありません。
初心者にとって朗報なのは、多くの基本概念がすべてのプログラミング言語に当てはまるということです。
データポイントをリストに格納する方法（スプレッドシートの行や列に格納するのと同じ）と、Pythonでさまざまな操作を行う方法を理解すれば、JavaScript、R、Rubyで同じことを行うには、構文を学ぶだけでよいのです。
本章では、データ・ジャーナリズムのコーディングは、三つのコア領域に分割できると考えます。
データ作業-スクレイピング、クリーニング、統計（スプレッドシートでできる作業）
バックエンド作業-データベース、サーバー、APIなどの難解な世界
フロントエンド作業-インタラクティブなデータ・ビジュアライゼーションなど、ウェブブラウザで行う作業のほとんど
本章では、データ・ジャーナリストがニュースルームでコードを扱う際に日常的に直面する、(a)学習時間、(b)作業の〆切、(c)コードのレビューなどの制約によって、これらの異なる分野の作業がどのように形成されるかを探ります。

学習時間
データ・ジャーナリズムのコミュニティに通底する素晴らしい特徴の一つに、学習意欲があります。
データジャーナリズムの基本を身につけようとする記者も、この分野での就職を目指している学生も、熟練した実務家も、学ぶべきことはたくさんあります。
テクノロジーの進化は非常に速く、あるツールが廃れていく一方で、才能豊かで寛大な人々によって別のツールが作られることもあり、常に新しいことが行われ、学ぶことができます。
TwitterのAPIからデータを取得するためのライブラリのように、あるタスクのためのツールには、次から次へと（短期間での開発を繰り返す）イテレーションやバージョンが登場します。
また、以前のツールをベースにして拡張することもよくあります（例：D3のデータ可視化ライブラリの拡張機能やアドオン）。
このように、データ・ジャーナリズムにおけるコーディングは、学習のための初期投資に加えて、時間とエネルギーを要する継続的な学習プロセスなのです。
プログラミングを学ぶ際に問題となるのは、慣れない概念に取り組むことで、最初のうちはスピードや効率が落ちてしまうことです。
プログラミングブートキャンプなら数週間で習得できますが、費用がかかります。カンファレンスで行われるワークショップは、初心者から上級者までを対象としており、安価ですが期間も短い（ので不十分です）。
仕事の一環として、時間をかけて学習する時間を持つことが必要です。そこでは実用的な問題に直面しますし、運が良ければ助けてくれる同僚もいるでしょう。
問題を解決するにはコツがあります。何度でも質問を重ね、何が問題の原因なのかを見極める嗅覚を養うのです。
このような時間とリソースへの投資は報われます。コーディングは多くの新しい可能性と収入をもたらします。
（しかし、）どの段階でも変わらない問題は、タスクにかかる時間を見積もるのが難しいということです。ニュースルームでの仕事は締め切りに追われているので、これは難しいことです。

〆切を守る
ジャーナリズムの仕事では、〆切が大切です。コーディングは、報道のように予測できないことがあります。経験の有無にかかわらず、遅れが生じることがあり、というより必ず起こります。
初心者にとっての課題の一つは、新しい作業方法を学ぶことによるスピードの低下です。何か新しいことを始めようとするとき、特に学習の初期段階では、知っているツール（表計算ソフトなど）を使ってタスクを完了できるように、十分な時間を確保しておきましょう。
学習を始めたばかりで時間がない場合は、使い慣れたツールを使うことにして、実験は時間ができてからにした方がよさそうです。
技術系企業では、大規模なプロジェクトに取り組む際に、プロジェクトをタスクとサブタスクに分解したり、タスクをリストアップして重要度に応じて優先順位をつけたりと、さまざまな方法を用いています。
データ・ジャーナリストもこの方法を見習いましょう。
英国の警察が解決できた犯罪の割合を調査したサンデー・タイムズのプロジェクトでは、読者の地域の数字を優先して表示しました。
これが終わって時間に余裕ができたところで、次の項目を行いました。読者の地域と他の地域、そして全国平均を比較したビジュアライゼーションです。
この方法によって、プロジェクトをいつでも公開できるようにしました。このような反復的なワークフローは、集中力と期待値の管理を同時に行うことができます。

Reviewing Code

Newsrooms often have systems in place to maintain standards for many of their products. A reporter doesn’t simply file their story and it gets printed: It is scrutinized by both editors and sub-editors.

Software developers have their own systems to ensure quality and to avoid introducing bugs to collaborative projects. This includes “code reviews,” where one programmer submits their work and others test and review it, as well as automated code tests.

According to the 2017 Global Data Journalism Survey, 40% of responding data teams were three to five members and 30% of them counted only one or two members (Heravi, 2017). These small numbers pose a challenge to internal code reviewing practices. Data journalists thus often work on their own, either because they don’t have colleagues, because there are no peer-review systems in place or because there is no one with the right skills to review their code.

Internal quality control mechanisms can therefore become a luxury that only a few data journalism teams can afford (there are no sub-editors for coding!). The cost of not having such control is potential bugs left unattended, sub-optimal performance or, worst of all, errors left unseen. These resource constraints are perhaps partly why it is important for many journalists to look for input on and collaboration around their work outside their organizations, for example from online coding communities.1

Footnotes

1. More on data journalism code transparency and reviewing practices can be found in chapters in this volume by Leon and Mazotte.

Works Cited

BBC Data Journalism team. (n.d.). What software do the BBC use [Interview].warwick.ac.uk/fac/cross_fac/cim/news/bbc-r-interview/

González, M., Hensleigh, E., McLean, M., Segger, M., & Selby-Boothroyd, A. (2018, August 6). How we made the new Big Mac Index interactive. Source. https:// source.opennews.org/articles/how-we-made-new-big-mac-index-interactive/ Heravi, B. (2017, August 1). State of data journalism globally: First insights into the global data journalism survey. Medium. medium.com/ucd-ischool/state-of-data-journalism-globally-cb2f4696ad3d
